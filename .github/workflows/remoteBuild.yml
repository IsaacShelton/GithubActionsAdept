name: Remote Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CTEST_OUTPUT_ON_FAILURE: On
  IS_GITHUB_WORKFLOW: On

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
      - uses: actions/checkout@v3
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Configure
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Archive Build Result
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          files: build
          outPath: build-${{ matrix.os }}.tar.gz
      - name: Archive E2E Infrastructure
        uses: a7ul/tar-action@v1.1.0
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          command: c
          cwd: tests
          files: e2e
          outPath: e2e.tar.gz
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}-archive
          path: build-${{ matrix.os }}.tar.gz
      - name: Upload E2E Testing Infrastructure Artifact
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: e2e-archive
          path: e2e.tar.gz
  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.2
        with:
          python-version: '3.x' 
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-${{ matrix.os }}-archive
      - name: Download E2E Testing Infrastructure Artifact
        uses: actions/download-artifact@v3
        with:
          name: e2e-archive
      - name: Unpack 1/2
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          files: e2e.tar.gz
      - name: Unpack 2/2
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          files: build-${{ matrix.os }}.tar.gz
      - name: Unit Test
        working-directory: build
        run: ctest -C ${{env.BUILD_TYPE}}
      - name: E2E Test
        working-directory: ${{github.workspace}}/e2e
        run: python3 e2e-runner.py ../build/adept
  build-windows-installer:
    needs: test
    runs-on: windows-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-windows-latest-archive
      - name: Unpack
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          files: build-windows-latest.tar.gz
      - name: Checkout Adept Standard Library
        uses: actions/checkout@v3
        with:
          repository: 'AdeptLanguage/AdeptImport'
          path: 'AdeptImport'
      - name: Checkout Adept Default Configuration
        uses: actions/checkout@v3
        with:
          repository: 'AdeptLanguage/Config'
          path: 'AdeptConfig'
      - name: Checkout Windows Installer Builder
        uses: actions/checkout@v3
        with:
          repository: 'IsaacShelton/AdeptWindowsInstaller'
          path: 'AdeptWindowsInstaller'
      - name: Pre-package
        shell: bash
        run: mkdir -p stage
      - name: Generate GUID
        shell: bash
        run: echo -n "::set-output name=guid::" && python3 AdeptWindowsInstaller/generate-guid.py
        id: guid
      - name: Perform substitutions
        shell: bash
        run: >
          sed -i AdeptWindowsInstaller/Adept-X.X-installer.iss
            -e 's/__STAGING_AREA__/stage/g'
            -e 's/__OUTPUT_DIRECTORY__/./g'
            -e 's/__FAVICON_DIRECTORY__/Adept\res/g'
            -e 's/X.X/nightly/g'
            -e 's/adeptX-X/adept-nightly/g'
            -e 's/{7D143E16-9268-4F20-A0FA-8B30D8B14ECA}/${{steps.guid.outputs.guid}}/g'
      - name: Download Support Libraries
        shell: bash
        run: wget -O Adept-Windows-From-Source-Necessities.zip https://github.com/AdeptLanguage/Adept/releases/download/v2.6/Adept-Windows-From-Source-Necessities.zip
      - name: Unpack Support Libraries
        shell: bash
        run: unzip Adept-Windows-From-Source-Necessities.zip
      - name: Stage
        shell: bash
        run: |
          mkdir -p stage
          mv build/adept.exe stage/adept.exe
          mv AdeptConfig/adept.config stage/adept.config
          mv AdeptImport stage/import
          mv AdeptWindowsInstaller/adeptX-X.bat stage/adeptX-X.bat
          mv Adept-Windows-From-Source-Necessities/* stage/
      - name: Package as Installer
        run: iscc AdeptWindowsInstaller/Adept-nightly-installer.iss
  deploy:
    needs: [test, build-windows-installer]
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact (windows-latest)
        uses: actions/download-artifact@v3
        with:
          name: build-windows-latest-archive
      - name: Download Windows Installer Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-installer
      - name: Pre-Unpack
        run: mkdir windows-latest
      - name: Unpack Windows Build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          cwd: windows-latest
          files: build-windows-latest.tar.gz
      - name: Stage
        run: |
          mkdir stage
          mv windows-latest/build/adept.exe stage/x86_64-Windows-adept.exe
          mv Adept-nightly-installer.exe stage/Adept-nightly-installer.exe
      - name: Release
        uses: IsaacShelton/update-existing-release@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: Nightly
          replace: true
          files: >
            stage/x86_64-Windows-adept.exe
            stage/Adept-nightly-installer.exe

