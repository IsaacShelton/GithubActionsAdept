name: Remote Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CTEST_OUTPUT_ON_FAILURE: On
  IS_GITHUB_WORKFLOW: On

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
      - uses: actions/checkout@v3
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Configure
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Archive Build Result
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          files: build
          outPath: build-${{ matrix.os }}.tar.gz
      - name: Archive E2E Infrastructure
        uses: a7ul/tar-action@v1.1.0
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          command: c
          cwd: tests
          files: e2e
          outPath: e2e.tar.gz
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}-archive
          path: build-${{ matrix.os }}.tar.gz
      - name: Upload E2E Testing Infrastructure Artifact
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: e2e-archive
          path: e2e.tar.gz
  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.2
        with:
          python-version: '3.x' 
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-${{ matrix.os }}-archive
      - name: Download E2E Testing Infrastructure Artifact
        uses: actions/download-artifact@v3
        with:
          name: e2e-archive
      - name: Unpack 1/2
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          files: e2e.tar.gz
      - name: Unpack 2/2
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          files: build-${{ matrix.os }}.tar.gz
      - name: Unit Test
        working-directory: build
        run: ctest -C ${{env.BUILD_TYPE}}
      - name: E2E Test
        working-directory: ${{github.workspace}}/e2e
        run: python3 e2e-runner.py ../build/adept
  build-macos-installer:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.2
        with:
          python-version: '3.x' 
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-macos-latest-archive
      - name: Unpack
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          files: build-macos-latest.tar.gz
      - name: Checkout macOS Installer Builder
        uses: actions/checkout@v3
        with:
          repository: 'IsaacShelton/macOS-installer-builder'
          ref: 'v1.0.0'
          path: 'macOS-installer-builder'
      - name: Checkout Adept Standard Library
        uses: actions/checkout@v3
        with:
          repository: 'AdeptLanguage/AdeptImport'
          path: 'AdeptImport'
      - name: Checkout Adept Default Configuration
        uses: actions/checkout@v3
        with:
          repository: 'AdeptLanguage/Config'
          path: 'AdeptConfig'
      - name: Download Adept Cross Compilation Support
        run: wget -O AdeptCrossCompilation.zip https://github.com/IsaacShelton/AdeptCrossCompilation/releases/download/2.4/AdeptCrossCompilation-MacOS-to-Windows.zip
      - name: Unpack Cross Compilation Support
        run: unzip AdeptCrossCompilation.zip
      - name: Stage Application Files
        working-directory: ${{github.workspace}}/macOS-installer-builder
        run: |
          rm -rf stage/application
          mkdir -p stage/application
          mv ../AdeptImport stage/application/import
          mv ../AdeptCrossCompilation-MacOS-to-Windows/cross-compile-windows stage/application/cross-compile-windows
          mv ../AdeptConfig/adept.config stage/application/adept.config
          mv ../build/adept stage/application/adept
      - name: Stage Installer Files
        working-directory: ${{github.workspace}}/macOS-installer-builder
        run: |
          sed -i '' -e s/Adept\ 2.6/Adept\ Nightly/g stage/installer/welcome.html
          sed -i '' -e s/Adept\ 2.6/Adept\ Nightly/g -e s/adept2-6/adept-nightly/g stage/installer/conclusion.html
          sed -i '' -e s/adept2-6/adept-nightly/g -e s/2.6.0/Nightly/g stage/installer/postinstall
      - name: Package as Installer
        working-directory: ${{github.workspace}}/macOS-installer-builder
        run: python3 src/build-installer.py Adept nightly
      - name: Upload Installer Archive Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-installer
          path: macOS-installer-builder/build/Adept-nightly-installer.pkg
  deploy:
    needs: [test, build-macos-installer]
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact (windows-latest)
        uses: actions/download-artifact@v3
        with:
          name: build-windows-latest-archive
      - name: Download Build Artifact (macos-latest)
        uses: actions/download-artifact@v3
        with:
          name: build-macos-latest-archive
      - name: Download Build Artifact (ubuntu-latest)
        uses: actions/download-artifact@v3
        with:
          name: build-ubuntu-latest-archive
      - name: Download macOS Installer Artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-installer
      - name: Pre-Unpack
        run: mkdir windows-latest macos-latest ubuntu-latest
      - name: Unpack Windows Build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          cwd: windows-latest
          files: build-windows-latest.tar.gz
      - name: Unpack macOS Build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          cwd: macos-latest
          files: build-macos-latest.tar.gz
      - name: Unpack Ubuntu Build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          cwd: ubuntu-latest
          files: build-ubuntu-latest.tar.gz
      - name: Stage
        run: |
          mkdir stage
          mv windows-latest/build/adept.exe stage/x86_64-Windows-adept.exe
          mv macos-latest/build/adept stage/arm64-MacOS-adept
          mv ubuntu-latest/build/adept stage/x86_64-Ubuntu-adept
          mv Adept-nightly-installer.pkg stage/Adept-nightly-installer.pkg
      - name: Release
        uses: IsaacShelton/update-existing-release@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: Nightly
          replace: true
          files: >
            stage/x86_64-Windows-adept.exe
            stage/arm64-MacOS-adept
            stage/x86_64-Ubuntu-adept
            stage/Adept-nightly-installer.pkg
